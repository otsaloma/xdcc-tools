#!/usr/bin/env python3

import bs4
import os
import requests
import subprocess
import sys
import urllib.parse

if sys.argv[1] in ["-h", "--help", "help"] or len(sys.argv[1:]) not in [1, 2]:
    name = os.path.basename(__file__)
    print("Usage: {} QUERY".format(name))
    print("  e.g. {} Snow.White.S01E01.720p\n".format(name))
    print("Usage: {} QUERY NUMBERS".format(name))
    print("  e.g. {} Snow.White.S01E%%.720p 1-10\n".format(name))
    print("The latter form will do multiple searches, looping over NUMBERS. Use")
    print("percent signs in place of the number in QUERY, with more than one")
    print("percent sign giving zero padded numbers. NUMBERS can be either a range")
    print("or a list or both, e.g. 1,3,7-9.")
    raise SystemExit(1)

if len(sys.argv[1:]) == 2:
    # Format filenames of individual episodes (or whatever)
    # and call recursively in a subprocess.
    for arg in sys.argv[2].split(","):
        args = arg.split("-") + [arg]
        a, b = map(int, args[:2])
        for num in range(a, b + 1):
            query = sys.argv[1]
            query = query.replace("%%%", "{:03d}".format(num))
            query = query.replace("%%", "{:02d}".format(num))
            query = query.replace("%", "{:01d}".format(num))
            command = "{} {}".format(__file__, query)
            print("Running {}".format(command))
            subprocess.run(command, shell=True)
    raise SystemExit(0)

results = []
url = "http://www.xdcc.eu/search.php?searchkey={}"
url = url.format(urllib.parse.quote(sys.argv[1]))
print("\n{}".format(url))
page = requests.get(url).text
soup = bs4.BeautifulSoup(page, "html.parser")
for row in soup.select("#table tbody tr"):
    cols = list(row.children)
    buttons = list(cols[1].select("a"))
    url = buttons[0].attrs["href"]
    results.append({
        "channel": url.split("//")[1].split("/")[1],
        "filename": cols[6].text,
        "filesize": cols[5].text,
        "get_count": int(cols[4].text.rstrip("x")),
        "nick": cols[2].text,
        "pack": int(cols[3].text.lstrip("#")),
        "server": url.split("//")[1].split("/")[0],
    })

results.sort(key=lambda x: -x["get_count"])
for i, result in enumerate(results[:10]):
    print("\n{num:2d}. {filename} ({filesize})".format(num=i+1, **result))
    print("{p}{nick} @ {channel}".format(p=" "*4, **result))

index = input("\nDownload # ")
if not index: raise SystemExit(0)
index = int(index) - 1
command = "xdcc-download '{server}' '{channel}' '{nick}' {pack:d}"
command = command.format(**results[index])
print("Running {}".format(command))
subprocess.run(command, shell=True)
